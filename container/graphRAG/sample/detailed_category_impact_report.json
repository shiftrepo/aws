{
  "node_properties": {
    "Column": [
      {
        "props": [
          "data_type",
          "name",
          "is_nullable",
          "is_identity",
          "is_foreign_key",
          "table_name",
          "is_primary_key"
        ]
      },
      {
        "props": [
          "data_type",
          "name",
          "is_primary_key",
          "is_nullable",
          "is_foreign_key",
          "table_name",
          "has_unique_constraint",
          "max_length"
        ]
      },
      {
        "props": [
          "data_type",
          "name",
          "is_nullable",
          "is_foreign_key",
          "table_name",
          "max_length",
          "is_primary_key"
        ]
      },
      {
        "props": [
          "is_primary_key",
          "is_nullable",
          "data_type",
          "is_foreign_key",
          "table_name",
          "max_length",
          "name"
        ]
      },
      {
        "props": [
          "data_type",
          "name",
          "is_primary_key",
          "is_nullable",
          "is_foreign_key",
          "table_name",
          "default_value"
        ]
      }
    ],
    "CRUDOperation": [
      {
        "props": [
          "complexity_score",
          "risk_score",
          "testing_priority",
          "operation_type",
          "module_name",
          "target_table",
          "error_handling",
          "function_name",
          "file_path",
          "line_number",
          "transaction_scope",
          "complexity",
          "performance_category"
        ]
      },
      {
        "props": [
          "risk_score",
          "testing_priority",
          "operation_type",
          "module_name",
          "complexity_score",
          "target_table",
          "error_handling",
          "function_name",
          "file_path",
          "line_number",
          "transaction_scope",
          "complexity",
          "performance_category"
        ]
      },
      {
        "props": [
          "module_name",
          "testing_priority",
          "function_name",
          "risk_score",
          "target_table",
          "error_handling",
          "operation_type",
          "complexity_score",
          "file_path",
          "line_number",
          "transaction_scope",
          "complexity",
          "performance_category"
        ]
      },
      {
        "props": [
          "module_name",
          "risk_score",
          "testing_priority",
          "function_name",
          "operation_type",
          "file_path",
          "complexity_score",
          "performance_category",
          "target_table",
          "error_handling",
          "transaction_scope",
          "complexity",
          "line_number"
        ]
      },
      {
        "props": [
          "testing_priority",
          "module_name",
          "complexity_score",
          "risk_score",
          "function_name",
          "operation_type",
          "file_path",
          "cascade_impact",
          "performance_category",
          "target_table",
          "error_handling",
          "transaction_scope",
          "complexity",
          "line_number"
        ]
      }
    ],
    "Table": [
      {
        "props": [
          "description",
          "schema",
          "primary_key",
          "created_date",
          "estimated_records",
          "table_type",
          "business_criticality",
          "name"
        ]
      },
      {
        "props": [
          "estimated_records",
          "primary_key",
          "schema",
          "name",
          "created_date",
          "description",
          "table_type",
          "business_criticality"
        ]
      },
      {
        "props": [
          "primary_key",
          "description",
          "schema",
          "name",
          "created_date",
          "table_type",
          "business_criticality",
          "estimated_records"
        ]
      },
      {
        "props": [
          "primary_key",
          "description",
          "schema",
          "name",
          "created_date",
          "estimated_records",
          "table_type",
          "business_criticality"
        ]
      }
    ],
    "Application": [
      {
        "props": [
          "name",
          "type",
          "created_date",
          "framework",
          "business_criticality",
          "version",
          "language",
          "last_updated"
        ]
      },
      {
        "props": [
          "type",
          "name",
          "created_date",
          "framework",
          "business_criticality",
          "version",
          "language",
          "last_updated"
        ]
      },
      {
        "props": [
          "type",
          "name",
          "created_date",
          "version",
          "framework",
          "business_criticality",
          "language",
          "last_updated"
        ]
      }
    ]
  },
  "impact_analysis": {
    "category_name_column": [
      {
        "column_name": "category_name",
        "data_type": "VARCHAR2",
        "is_pk": false,
        "is_fk": false,
        "nullable": false,
        "table_name": "categories",
        "max_length": 100,
        "default_value": null
      }
    ],
    "containing_table": [
      {
        "table_name": "categories",
        "schema": "ec_site",
        "table_type": "reference",
        "criticality": "medium",
        "record_count": null
      }
    ],
    "crud_operations": [],
    "using_applications": [
      {
        "app_name": "product_operations",
        "app_type": null,
        "language": "C",
        "framework": "MySQL/C",
        "version": "1.0"
      }
    ],
    "foreign_key_relationships": [
      {
        "source_table": "products",
        "target_table": "categories",
        "constraint_name": "fk_products_category",
        "cascade_type": "RESTRICT",
        "relationship_type": "many-to-one"
      },
      {
        "source_table": "categories",
        "target_table": "categories",
        "constraint_name": "fk_categories_parent",
        "cascade_type": "RESTRICT",
        "relationship_type": "one-to-many"
      }
    ],
    "all_category_columns": [
      {
        "column_name": "category_id",
        "data_type": "NUMBER",
        "is_pk": true,
        "is_fk": false,
        "nullable": false,
        "max_length": null
      },
      {
        "column_name": "category_name",
        "data_type": "VARCHAR2",
        "is_pk": false,
        "is_fk": false,
        "nullable": false,
        "max_length": 100
      },
      {
        "column_name": "created_at",
        "data_type": "DATE",
        "is_pk": false,
        "is_fk": false,
        "nullable": false,
        "max_length": null
      },
      {
        "column_name": "description",
        "data_type": "CLOB",
        "is_pk": false,
        "is_fk": false,
        "nullable": true,
        "max_length": null
      },
      {
        "column_name": "parent_category_id",
        "data_type": "NUMBER",
        "is_pk": false,
        "is_fk": true,
        "nullable": true,
        "max_length": null
      }
    ],
    "related_tables": [
      {
        "table_name": "products",
        "schema": "ec_site",
        "table_type": "master",
        "criticality": "high"
      },
      {
        "table_name": "categories",
        "schema": "ec_site",
        "table_type": "reference",
        "criticality": "medium"
      }
    ],
    "referencing_columns": []
  },
  "suggested_queries": [
    {
      "name": "Find all CRUD operations affecting category_name",
      "query": "\n                    MATCH (crud:CRUDOperation)-[:TARGETS]->(table:Table {name: 'categories'})\n                    RETURN crud.operation_type as operation_type,\n                           crud.function_name as function_name,\n                           crud.file_path as file_path,\n                           crud.line_number as line_number,\n                           crud.complexity as complexity\n                    ORDER BY crud.operation_type, crud.function_name\n                ",
      "purpose": "Identify all functions that perform CRUD operations on categories table"
    },
    {
      "name": "Find applications with high dependency on categories",
      "query": "\n                    MATCH (app:Application)-[:USES]->(table:Table {name: 'categories'})\n                    MATCH (app)-[:IMPLEMENTS]->(crud:CRUDOperation)-[:TARGETS]->(table)\n                    RETURN app.name as application,\n                           app.language as language,\n                           count(crud) as crud_count,\n                           collect(DISTINCT crud.operation_type) as operations\n                    ORDER BY crud_count DESC\n                ",
      "purpose": "Identify applications most affected by category_name changes"
    },
    {
      "name": "Analyze foreign key cascade effects",
      "query": "\n                    MATCH (table1:Table)-[ref:REFERENCES]->(table2:Table)\n                    WHERE table1.name = 'categories' OR table2.name = 'categories'\n                    RETURN table1.name as source_table,\n                           table2.name as target_table,\n                           ref.constraint_name as constraint_name,\n                           ref.cascade_type as cascade_type,\n                           ref.relationship_type as relationship_type\n                ",
      "purpose": "Analyze cascade effects of category_name changes"
    },
    {
      "name": "Find JOIN operations involving categories",
      "query": "\n                    MATCH (crud:CRUDOperation)-[:TARGETS]->(table:Table)\n                    WHERE crud.operation_type = 'SELECT' AND \n                          (crud.function_name CONTAINS 'join' OR \n                           crud.function_name CONTAINS 'JOIN')\n                    MATCH (categories:Table {name: 'categories'})\n                    RETURN crud.function_name as function_name,\n                           crud.file_path as file_path,\n                           table.name as target_table\n                ",
      "purpose": "Find JOIN operations that might reference category_name"
    }
  ]
}