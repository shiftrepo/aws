version: '3'

services:
  sqlite-db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: ${DATABASE_CONTAINER}
    ports:
      - "${DATABASE_API_PORT}:5000"
    volumes:
      - ./db/data:/app/data
    environment:
      - INPUT_DB_S3_PATH=${INPUT_DB_S3_PATH}
      - BIGQUERY_DB_S3_PATH=${BIGQUERY_DB_S3_PATH}
      - LOG_LEVEL=DEBUG
    networks:
      - mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nl-query-service:
    build:
      context: ./app/nl-query
      dockerfile: Dockerfile
    container_name: ${NL_QUERY_CONTAINER}
    ports:
      - "${NL_QUERY_API_PORT}:5000"
    environment:
      - DATABASE_API_URL=http://sqlite-db:5000
      - LOG_LEVEL=DEBUG
    networks:
      - mcp-network
    restart: unless-stopped
    depends_on:
      sqlite-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web-ui:
    build:
      context: ./app/webui
      dockerfile: Dockerfile
    container_name: ${WEBUI_CONTAINER}
    ports:
      - "${WEBUI_PORT}:5000"
    environment:
      - DATABASE_API_URL=http://sqlite-db:5000
      - NL_QUERY_API_URL=http://nl-query-service:5000
      - LOG_LEVEL=DEBUG
    networks:
      - mcp-network
    restart: unless-stopped
    depends_on:
      sqlite-db:
        condition: service_healthy
      nl-query-service:
        condition: service_healthy

networks:
  mcp-network:
    driver: bridge
